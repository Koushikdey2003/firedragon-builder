diff --git a/intl/l10n/Localization.cpp b/intl/l10n/Localization.cpp
index e741783bbb..06a17feb40 100644
--- a/intl/l10n/Localization.cpp
+++ b/intl/l10n/Localization.cpp
@@ -78,8 +78,8 @@ static nsTArray<ffi::L10nKey> ConvertFromL10nKeys(
     if (!entry.message.value.IsVoid()) {
       nsCString value;
       value.Assign(entry.message.value);
-      value.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
-      value.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+      value.ReplaceSubstring("Firefox"_ns, "FireDragon"_ns);
+      value.ReplaceSubstring("Mozilla"_ns, "Garuda Linux"_ns);
       m.mValue = value;
     }
     if (!entry.message.attributes.IsEmpty()) {
@@ -90,8 +90,8 @@ static nsTArray<ffi::L10nKey> ConvertFromL10nKeys(
       for (auto& attr : value) {
         nsCString attrValue;
         attrValue.Assign(attr.mValue);
-        attrValue.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
-        attrValue.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+        attrValue.ReplaceSubstring("Firefox"_ns, "FireDragon"_ns);
+        attrValue.ReplaceSubstring("Mozilla"_ns, "Garuda Linux"_ns);
         attr.mValue = attrValue;
       }
     }
@@ -300,8 +300,8 @@ already_AddRefed<Promise> Localization::FormatValue(
         } else {
           nsCString value;
           value.Assign(*aValue);
-          value.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
-          value.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+          value.ReplaceSubstring("Firefox"_ns, "FireDragon"_ns);
+          value.ReplaceSubstring("Mozilla"_ns, "Garuda Linux"_ns);
           promise->MaybeResolve(value);
         }
       });
@@ -337,8 +337,8 @@ already_AddRefed<Promise> Localization::FormatValues(
           for (const auto& value : *aValues) {
             nsCString modifiedValue;
             modifiedValue.Assign(value);
-            modifiedValue.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
-            modifiedValue.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+            modifiedValue.ReplaceSubstring("Firefox"_ns, "FireDragon"_ns);
+            modifiedValue.ReplaceSubstring("Mozilla"_ns, "Garuda Linux"_ns);
             modifiedValues.AppendElement(modifiedValue);
           }
 
@@ -399,8 +399,8 @@ void Localization::FormatValueSync(const nsACString& aId,
                                                 &aRetVal, &errors);
 
   if (rv) {
-    aRetVal.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
-    aRetVal.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+    aRetVal.ReplaceSubstring("Firefox"_ns, "FireDragon"_ns);
+    aRetVal.ReplaceSubstring("Mozilla"_ns, "Garuda Linux"_ns);
     MaybeReportErrorsToGecko(errors, aRv, GetParentObject());
   } else {
     aRv.ThrowInvalidStateError(
@@ -436,8 +436,8 @@ void Localization::FormatValuesSync(
 
   if (rv) {
     for (auto& value : aRetVal) {
-      value.ReplaceSubstring("Firefox"_ns, "Floorp"_ns);
-      value.ReplaceSubstring("Mozilla"_ns, "Ablaze"_ns);
+      value.ReplaceSubstring("Firefox"_ns, "FireDragon"_ns);
+      value.ReplaceSubstring("Mozilla"_ns, "Garuda Linux"_ns);
     }
     MaybeReportErrorsToGecko(errors, aRv, GetParentObject());
   } else {
