diff --git a/browser/components/preferences/privacy.inc.xhtml b/browser/components/preferences/privacy.inc.xhtml
index 686f6f861aa8..a9418a717feb 100644
--- a/browser/components/preferences/privacy.inc.xhtml
+++ b/browser/components/preferences/privacy.inc.xhtml
@@ -58,6 +58,14 @@
         </description>
       </vbox>
     </hbox>
+    <hbox id="cookieBlockerIncompatibilityWarning" class="info-box-container" hidden="true">
+      <vbox class="info-icon-container">
+        <html:img class="info-icon"></html:img>
+      </vbox>
+      <vbox flex="1">
+        <description data-l10n-id="content-blocking-cookie-blocker-incompatibility-warning"/>
+      </vbox>
+    </hbox>
     <hbox id="fpiIncompatibilityWarning" class="info-box-container" hidden="true">
       <vbox class="info-icon-container">
         <html:img class="info-icon"></html:img>
@@ -520,7 +528,7 @@
     </hbox>
     <hbox>
       <checkbox id="handleCookieBanners"
-                preference="cookiebanners.service.mode.privateBrowsing"
+                preference="cookiebanners.service.mode"
                 data-l10n-id="cookie-banner-blocker-checkbox-label"
                 flex="1" />
     </hbox>
diff --git a/browser/components/preferences/privacy.js b/browser/components/preferences/privacy.js
index 9a5051bdc259..ec600027e2e1 100644
--- a/browser/components/preferences/privacy.js
+++ b/browser/components/preferences/privacy.js
@@ -162,6 +162,7 @@ Preferences.addAll([
 
   // Cookies
   { id: "network.cookie.cookieBehavior", type: "int" },
+  { id: "network.cookie.cookieBehavior.pbmode", type: "int" },
   { id: "network.cookie.blockFutureCookies", type: "bool" },
   // Content blocking category
   { id: "browser.contentblocking.category", type: "string" },
@@ -261,7 +262,9 @@ Preferences.addAll([
 
   // Cookie Banner Handling
   { id: "cookiebanners.ui.desktop.enabled", type: "bool" },
+  { id: "cookiebanners.service.mode", type: "int" },
   { id: "cookiebanners.service.mode.privateBrowsing", type: "int" },
+  { id: "cookiebanners.service.detectOnly", type: "bool" },
 
   // DoH
   { id: "network.trr.mode", type: "int" },
@@ -351,6 +354,12 @@ function setUpContentBlockingWarnings() {
   document.getElementById("rfpIncompatibilityWarning").hidden =
     !Preferences.get("privacy.resistFingerprinting").value &&
     !Preferences.get("privacy.resistFingerprinting.pbmode").value;
+
+  document.getElementById("cookieBlockerIncompatibilityWarning").hidden =
+    Preferences.get("network.cookie.cookieBehavior").value !== 2 &&
+    Preferences.get("network.cookie.cookieBehavior.pbmode") !== 2 ||
+    Preferences.get("cookiebanners.service.mode").value === 0 &&
+    Preferences.get("cookiebanners.service.mode.privateBrowsing").value === 0;
 }
 
 function initTCPStandardSection() {
@@ -1424,6 +1433,23 @@ var gPrivacyPane = {
       setUpContentBlockingWarnings
     );
 
+    Preferences.get("network.cookie.cookieBehavior").on(
+      "change",
+      setUpContentBlockingWarnings
+    );
+    Preferences.get("network.cookie.cookieBehavior.pbmode").on(
+      "change",
+      setUpContentBlockingWarnings
+    );
+    Preferences.get("cookiebanners.service.mode").on(
+      "change",
+      setUpContentBlockingWarnings
+    );
+    Preferences.get("cookiebanners.service.mode.privateBrowsing").on(
+      "change",
+      setUpContentBlockingWarnings
+    );
+
     setUpContentBlockingWarnings();
 
     initTCPStandardSection();
@@ -2654,12 +2680,15 @@ var gPrivacyPane = {
   },
 
   /**
-   * Reads the cookiebanners.service.mode.privateBrowsing pref,
-   * interpreting the multiple modes as a true/false value
+   * Reads the cookiebanners.service.mode and detectOnly preference value and
+   * updates the cookie banner handling checkbox accordingly.
    */
   readCookieBannerMode() {
+    if (Preferences.get("cookiebanners.service.detectOnly").value) {
+      return false;
+    }
     return (
-      Preferences.get("cookiebanners.service.mode.privateBrowsing").value !=
+      Preferences.get("cookiebanners.service.mode").value !=
       Ci.nsICookieBannerService.MODE_DISABLED
     );
   },
@@ -2670,16 +2699,27 @@ var gPrivacyPane = {
    */
   writeCookieBannerMode() {
     let checkbox = document.getElementById("handleCookieBanners");
-    if (!checkbox.checked) {
-      /* because we removed UI control for the non-PBM pref, disabling it here
-         provides an off-ramp for profiles where it had previously been enabled from the UI */
-      Services.prefs.setIntPref(
-        "cookiebanners.service.mode",
-        Ci.nsICookieBannerService.MODE_DISABLED
-      );
-      return Ci.nsICookieBannerService.MODE_DISABLED;
+    let mode;
+    if (checkbox.checked) {
+      mode = Ci.nsICookieBannerService.MODE_REJECT;
+
+      // Also unset the detect-only mode pref, just in case the user enabled
+      // the feature via about:preferences, not the onboarding doorhanger.
+      Services.prefs.setBoolPref("cookiebanners.service.detectOnly", false);
+    } else {
+      mode = Ci.nsICookieBannerService.MODE_DISABLED;
     }
-    return Ci.nsICookieBannerService.MODE_REJECT;
+
+    /**
+     * There is a second service.mode pref for private browsing,
+     * but for now we want it always be the same as service.mode
+     * more info: https://bugzilla.mozilla.org/show_bug.cgi?id=1817201
+     */
+    Services.prefs.setIntPref(
+      "cookiebanners.service.mode.privateBrowsing",
+      mode
+    );
+    return mode;
   },
 
   /**
diff --git a/browser/locales/en-US/browser/preferences/preferences.ftl b/browser/locales/en-US/browser/preferences/preferences.ftl
index cec78329c1d2..b8651de1b7e5 100644
--- a/browser/locales/en-US/browser/preferences/preferences.ftl
+++ b/browser/locales/en-US/browser/preferences/preferences.ftl
@@ -1273,6 +1273,7 @@ content-blocking-fpi-incompatibility-warning = You are using First Party Isolati
 # feature that can only be enabled via about:config, and it's not exposed to
 # standard users (e.g. via Settings).
 content-blocking-rfp-incompatibility-warning = You’re using Resist Fingerprinting (RFP), which replaces some of { -brand-short-name }’s fingerprinting protection settings. This might cause some sites to break.
+content-blocking-cookie-blocker-incompatibility-warning = Blocking all cookies is incompatible with Cookie Banner Blocker. If you want to really block all cookies please disable the Cookie Banner Blocker.
 
 ## These strings are used to define the different levels of
 ## Enhanced Tracking Protection.
diff --git a/browser/themes/shared/preferences/privacy.css b/browser/themes/shared/preferences/privacy.css
index df31828aa15b..486b3b1a383b 100644
--- a/browser/themes/shared/preferences/privacy.css
+++ b/browser/themes/shared/preferences/privacy.css
@@ -85,17 +85,20 @@
 
 .privacy-detailedoption,
 #fpiIncompatibilityWarning,
-#rfpIncompatibilityWarning {
+#rfpIncompatibilityWarning,
+#cookieBlockerIncompatibilityWarning {
   margin: 3px 0;
 }
 
 #fpiIncompatibilityWarning,
-#rfpIncompatibilityWarning {
+#rfpIncompatibilityWarning,
+#cookieBlockerIncompatibilityWarning {
   background-color: var(--section-highlight-background-color);
 }
 
 #fpiIncompatibilityWarning,
 #rfpIncompatibilityWarning,
+#cookieBlockerIncompatibilityWarning,
 #contentBlockingCategories {
   margin-top: 16px;
 }
